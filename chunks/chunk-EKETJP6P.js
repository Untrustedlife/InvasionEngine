function E(e){if(!Array.isArray(e)||e.length===0)throw new Error("Array must be non-empty.");let t=g(e.length)-1;return e[t]}function g(e){if(e<=0)throw new Error("The maximum value must be greater than 0.");return(Math.random()*e|0)+1}function y(e,t){let o=e?e.length:0;if(o===0)return-1;if(t<=e[0])return 0;if(t>=e[o-1])return o-1;let i=0,n=o-1;for(;i<=n;){let r=i+n>>1,a=e[r];if(a===t)return r;a<t?i=r+1:n=r-1}return t-e[n]<=e[i]-t?n:i}function C(e,t,o){return e+(t-e)*o}function b(e){let t=e.charCodeAt(0)===35?e.slice(1):e,o=parseInt(t.length===3?t.split("").map(i=>i+i).join(""):t,16);return[o>>16&255,o>>8&255,o&255]}var M=(e,t,o)=>Math.max(t,Math.min(o,e)),I=(e,t,o)=>e<t?t:e>o?o:e,O=Math.PI*2;var f=[{index:"officewall",image:"OfficeWall.png"},{index:"panel",image:"Panel.png"},{index:"hedge",image:"Hedge.png"},{index:"door",image:"OfficeDoor.png"},{index:"elevator",image:"Portal.png"},{index:"bluedoor",image:"OfficeDoorBlue.png"},{index:"field",image:"Field.png"}],d={0:{name:"empty",textures:{ALL:{0:"empty"}},height:0,collide:!1,miniMapColor:"#0c1220"},1:{name:"officewall",textures:{ALL:{0:"officewall"}},height:1,collide:!0,miniMapColor:"#ECDE60"},2:{name:"panel",textures:{ALL:{0:"panel"}},height:1,collide:!0,miniMapColor:"#707a88"},3:{name:"hedge",textures:{ALL:{0:"hedge"}},height:1,collide:!0,miniMapColor:"#00e676"},4:{name:"door",textures:{ALL:{0:"door"}},height:1,collide:!0,miniMapColor:"#996633"},5:{name:"elevator",textures:{ALL:{0:"elevator"}},height:1,collide:!1,miniMapColor:"#FFE300"},6:{name:"bluedoor",textures:{ALL:{0:"bluedoor"}},height:1,collide:!1,miniMapColor:"#3561ff"},7:{name:"field",textures:{ALL:{0:"field"}},height:1,collide:!0,miniMapColor:"#00FFFF"},9:{name:"bluedoor",textures:{ALL:{0:"bluedoor",1:"officewall",2:"officewall"}},height:3,collide:!1,miniMapColor:"#3561ff"},8:{name:"tallwall",textures:{ALL:{0:"officewall",1:"officewall",2:"officewall"}},height:3,collide:!0,miniMapColor:"#ECDE90"}};var j={NORTH:"NORTH",SOUTH:"SOUTH",EAST:"EAST",WEST:"WEST",ALL:"ALL"},k=64;function h(e=64,t=64){return new OffscreenCanvas(e,t)}var c={empty:null},P={...d};function u(e){let o=e.getContext("2d").getImageData(0,0,e.width,e.height),i=[];for(let n=0;n<e.width;n++){let r=new Uint8ClampedArray(e.height*4);for(let a=0;a<e.height;a++){let l=(a*e.width+n)*4,s=a*4;r[s]=o.data[l],r[s+1]=o.data[l+1],r[s+2]=o.data[l+2],r[s+3]=o.data[l+3]}i.push({data:r,h:e.height})}return{cols:i,w:e.width,h:e.height}}var x=Array.from({length:82},(e,t)=>t*.0125),p={},m=Object.fromEntries(Object.entries(c).map(([e,t])=>[e,t?u(t):null]));function w(){for(let e of Object.keys(m))delete m[e];for(let[e,t]of Object.entries(c))m[e]=t?u(t):null}function A(){for(let[e,t]of Object.entries(c))if(t){p[e]={};for(let o of x){let i=new OffscreenCanvas(t.width,t.height),n=i.getContext("2d");n.drawImage(t,0,0);let r=o*255|0;n.globalCompositeOperation="multiply",n.fillStyle=`rgb(${r},${r},${r})`,n.fillRect(0,0,i.width,i.height),p[e][o]=i}}}async function T(e){let t=`../assets/gfx/${e}`;return new Promise((o,i)=>{let n=new Image;n.onload=()=>{let r=h(64,64),a=r.getContext("2d",{willReadFrequently:!0});a.imageSmoothingEnabled=!1,a.drawImage(n,0,0,64,64),o(r)},n.onerror=()=>i(new Error(`Failed to load texture: ${t}`)),n.src=t})}async function W(){try{await L(f),w(),A()}catch(e){console.warn("Failed to init wall textures:",e)}}async function L(e){if(!Array.isArray(e)){console.warn("Expected an array of { index, image } objects. In loadImagesToReplaceTextures");return}let t=e.map(async(o,i)=>{let{index:n,image:r}=o||{};try{let a=await T(r);return c[n]=a,a}catch(a){return console.warn(`Failed to load texture "${r}" for index ${n} and dont support replacing with cool gmod missing texture:`,a),null}});await Promise.all(t)}var G=Object.freeze({entity:"entity",ball:"ball",sparkle:"sparkle",barrel:"barrel",food:"food",key:"key"});export{E as a,g as b,y as c,C as d,b as e,M as f,I as g,O as h,j as i,k as j,P as k,x as l,p as m,m as n,W as o,G as p};
